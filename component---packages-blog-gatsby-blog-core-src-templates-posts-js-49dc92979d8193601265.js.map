{"version":3,"sources":["webpack://@elegantstack/gatsby-starter-flexiblog-minimal/../packages/blog/gatsby-blog-core/src/templates/posts.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal/../packages/themes/gatsby-theme-flexiblog-minimal/src/containers/Posts.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal/../packages/flow-ui/flow-ui-components/src/utils/normalizeSlug.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal/../packages/flow-ui/flow-ui-components/src/Pagination/Pagination.jsx"],"names":["data","featuredPosts","paginatedPosts","props","pageContext","services","basePath","Seo","title","location","pathname","Divider","effectProps","effect","direction","mb","CardList","nodes","limit","variant","loading","pl","sx","display","skip","omitMedia","omitCategory","aside","columns","Pagination","pageInfo","mailchimp","NewsletterExpanded","simple","slug","replace","styles","wrapper","justifyContent","alignItems","textAlign","borderRadius","bg","maxWidth","mx","p","item","width","number","py","button","minWidth","currentPage","pageCount","hasPreviousPage","hasNextPage","prefixPath","normalizeSlug","pagingPath","prevLink","nextLink","as","Link","to"],"mappings":"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","file":"component---packages-blog-gatsby-blog-core-src-templates-posts-js-49dc92979d8193601265.js","sourcesContent":["import { graphql } from 'gatsby'\r\nimport PostsPage from '../containers/Posts'\r\n\r\nexport default PostsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query PostsPageQuery($paginatePostsPage: Boolean!, $skip: Int, $limit: Int) {\r\n    featuredPosts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: {ne: true}\r\n        featured: { eq: true }\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: 10\r\n    ) {\r\n      nodes {\r\n        ...ArticlePreview\r\n        ...ArticleThumbnailFeatured\r\n      }\r\n    }\r\n\r\n    recentPosts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: {ne: true}\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: 6\r\n    ) {\r\n      nodes {\r\n        ...ArticlePreview\r\n        ...ArticleThumbnailRegular\r\n      }\r\n    }\r\n\r\n    posts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: {ne: true}\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: 1000\r\n    ) @skip(if: $paginatePostsPage) {\r\n      group(field: category___name, limit: 10) {\r\n        categoryName: fieldValue\r\n        nodes {\r\n          ...ArticlePreview\r\n          ...ArticleThumbnailRegular\r\n        }\r\n      }\r\n    }\r\n\r\n    paginatedPosts: allArticle(\r\n      filter: {\r\n        private: { ne: true }\r\n        draft: {ne: true}\r\n      }\r\n      sort: { fields: [date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) @include(if: $paginatePostsPage) {\r\n      nodes {\r\n        ...ArticlePreview\r\n        ...ArticleThumbnailRegular\r\n      }\r\n      ...ArticlePagination\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Layout, Stack, Main, Sidebar, PreFooter } from '@layout'\r\nimport CardList from '@components/CardList'\r\nimport Pagination from '@components/Pagination'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport NewsletterExpanded from '@widgets/NewsletterExpanded'\r\n\r\nconst Posts = ({\r\n  data: { featuredPosts = {}, paginatedPosts = {} },\r\n  ...props\r\n}) => {\r\n  const { pageContext: { services = {}, basePath } = {} } = props\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Seo title='Home' />\r\n      {props.location.pathname === basePath && (\r\n        <>\r\n          <Divider />\r\n          <Stack\r\n            effectProps={{ effect: false }}\r\n            title='Suggested Articles'\r\n            direction={[`column`, `column`, `column`, `row`]}\r\n          >\r\n            <Main mb={[3, 3, 3, 0]}>\r\n              <CardList\r\n                nodes={featuredPosts.nodes}\r\n                limit={1}\r\n                variant={['vertical', 'horizontal-lg']}\r\n                loading='eager'\r\n              />\r\n            </Main>\r\n            <Sidebar\r\n              pl={[0, 0, 0, 3]}\r\n              sx={{ display: [`block`, `block`, `flex`] }}\r\n            >\r\n              <CardList\r\n                nodes={featuredPosts.nodes}\r\n                limit={4}\r\n                skip={4}\r\n                variant={[\r\n                  'horizontal-md',\r\n                  'horizontal',\r\n                  'horizontal',\r\n                  'horizontal-aside'\r\n                ]}\r\n                omitMedia\r\n                omitCategory\r\n                aside\r\n              />\r\n            </Sidebar>\r\n          </Stack>\r\n          <Divider />\r\n          <Stack>\r\n            <Main>\r\n              <CardList\r\n                nodes={featuredPosts.nodes}\r\n                limit={3}\r\n                skip={1}\r\n                columns={[1, 1, 1, 3]}\r\n                variant={[\r\n                  'horizontal-md',\r\n                  'horizontal',\r\n                  'horizontal',\r\n                  'vertical'\r\n                ]}\r\n              />\r\n            </Main>\r\n          </Stack>\r\n        </>\r\n      )}\r\n      <Divider />\r\n      <Stack title='Recently Published'>\r\n        <Main>\r\n          <CardList\r\n            nodes={paginatedPosts.nodes}\r\n            variant={['horizontal', 'vertical']}\r\n            columns={[1, 2, 3, 3]}\r\n            omitMedia\r\n          />\r\n        </Main>\r\n      </Stack>\r\n      <Divider />\r\n      <PreFooter>\r\n        <Pagination {...paginatedPosts.pageInfo} basePath={basePath} />\r\n        {services.mailchimp && (\r\n          <>\r\n            <Divider />\r\n            <NewsletterExpanded simple />\r\n          </>\r\n        )}\r\n      </PreFooter>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","// normalize use of trailing slash\r\nexport default slug => slug.replace(/\\/*$/, `/`)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport { Button, Flex, Box } from 'theme-ui'\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\r\nimport normalizeSlug from '@components/utils/normalizeSlug'\r\n\r\nconst pagingParam = 'page'\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    justifyContent: `space-between`,\r\n    alignItems: `center`,\r\n    textAlign: `center`,\r\n    borderRadius: `full`,\r\n    bg: `contentBg`,\r\n    maxWidth: [`none`, 500],\r\n    mx: `auto`,\r\n    p: 1\r\n  },\r\n  item: {\r\n    width: `1/3`\r\n  },\r\n  number: {\r\n    py: 2\r\n  },\r\n  button: {\r\n    minWidth: `full`\r\n  }\r\n}\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  pageCount,\r\n  hasPreviousPage,\r\n  hasNextPage,\r\n  basePath = '',\r\n  slug = ''\r\n}) => {\r\n  if (!hasNextPage && !hasPreviousPage) return ''\r\n  let prefixPath = normalizeSlug(basePath + slug)\r\n  let pagingPath = normalizeSlug(prefixPath + pagingParam)\r\n\r\n  const prevLink =\r\n    currentPage >= 3 ? `${pagingPath}${currentPage - 1}` : prefixPath\r\n  const nextLink = `${pagingPath}${currentPage + 1}`\r\n\r\n  return (\r\n    <Flex sx={styles.wrapper}>\r\n      <Box sx={styles.item}>\r\n        {hasPreviousPage && (\r\n          <Button variant='mute' as={Link} to={prevLink} sx={styles.button}>\r\n            <FaChevronLeft />\r\n            Previous\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      <Box sx={{ ...styles.item, ...styles.number }}>\r\n        Page <strong>{currentPage}</strong> of <strong>{pageCount}</strong>\r\n      </Box>\r\n      <Box sx={styles.item}>\r\n        {hasNextPage && (\r\n          <Button variant='dark' as={Link} to={nextLink} sx={styles.button}>\r\n            Next\r\n            <FaChevronRight />\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number,\r\n  pageCount: PropTypes.number,\r\n  hasPreviousPage: PropTypes.bool,\r\n  hasNextPage: PropTypes.bool,\r\n  slug: PropTypes.string,\r\n  pagingParam: PropTypes.string\r\n}\r\n"],"sourceRoot":""}